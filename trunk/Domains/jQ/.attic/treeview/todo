* document cookieId option
* document prerendered option: Assume hitareas and classes are pre-rendered on the serverside, just applies event handlers

{{APIOption|prerendered|Boolean|Set to skip rendering of classes and hitarea divs, assuming that is done by the serverside. Makes the tree more obtrusive, but speeds up render times for large trees signicifcantly.|false}}
{{APIOptionExample|
|desc=Allows the treeview to be fully closed
|inhead=<nowiki><link rel="stylesheet" href="http://dev.jquery.com/view/trunk/plugins/treeview/jquery.treeview.css" type="text/css" media="screen" />
  <script type="text/javascript" src="http://dev.jquery.com/view/trunk/plugins/treeview/jquery.treeview.js"></script>
  <style type="text/css">
  #browser {
    font-family: Verdana, helvetica, arial, sans-serif;
    font-size: 68.75%;
  }
  </style></nowiki>
|html=<nowiki><ul class="treeview" id="tree">
    <li class="expandable"><div class="hitarea"></div><span><strong>Home</strong></span>
      <ul style="display: none;">
        <li><a href="?x">Item X</a></li>
        <li><a href="?y">Item Y</a> </li>
        <li class="last"><a href="?z">Item Z</a></li>
      </ul>
    </li>
    <li class="expandable"><div class="hitarea"></div><span><strong>News</strong></span>
      <ul style="display: none;">
        <li><a href="?x">Item X</a></li>
        <li><a href="?y">Item Y</a> </li>
        <li class="last"><a href="?z">Item Z</a></li>
      </ul>
    </li>
  </ul></nowiki>
|code={{Code|Core|$}}("#tree").{{Code|Plugins/Treeview|treeview}}({
    prerendered: true
 })
}}


* lazy-loading: render the complete tree, but only apply hitzones and hiding of children to the first level on load

async treeview:
* support animations
* support persist options